#!/usr/bin/env python

from numpy import arange
import matplotlib.pyplot as plot
import math

def q6_r_sys(r_m, c):
    one_module = r_m * r_m + (1 - r_m) * c * r_m
    return one_module * one_module + (1 - one_module) * c * one_module

q7_lambda = 0.001

def calculate_q7_r_sys(t):
    r_m = math.e ** (-0.001 * t)
    r_m_p = (1 - r_m)
    return r_m ** 3 + r_m_p * (r_m ** 3) + 4 * (r_m_p ** 2) * (r_m ** 2) + 2 * r_m_p * (r_m ** 2)

def calculate_q7_tmr(t):
    r_m = math.e ** (-0.001 * t)
    return 3 * r_m * r_m - 2 * r_m * r_m * r_m

q6_r_0 = []
q6_r_05 = []
q6_r_1 = []
q6_r_m = arange(0, 1.001, 0.01)

for i in q6_r_m:
    q6_r_0.append(q6_r_sys(i, 0))
    q6_r_05.append(q6_r_sys(i, 0.5))
    q6_r_1.append(q6_r_sys(i, 1))

q7_r_sys = []
q7_tmr = []
q7_t = arange(0, 4000, 1)

for i in q7_t:
    q7_r_sys.append(calculate_q7_r_sys(i))
    q7_tmr.append(calculate_q7_tmr(i))

plot.plot(q6_r_m, q6_r_0, label='Coverage $C = 0$')
plot.plot(q6_r_m, q6_r_05, label='Coverage $C = 0.5$')
plot.plot(q6_r_m, q6_r_1, label='Coverage $C = 1$')
plot.legend(bbox_to_anchor=(0.5, 0.9), bbox_transform=plot.gcf().transFigure)
plot.xlabel("Module Reliability $R_M$")
plot.ylabel("System Reliability $R_{Sys}$")
plot.title("Reliability of the Pair by Spare scheme over Module Reliability")
plot.savefig('question_6_graph.pdf', bbox_inches='tight')

plot.figure()
plot.plot(q7_t, q7_r_sys, label='TMR with Spare for One Module')
plot.plot(q7_t, q7_tmr, label='Standard TMR')
plot.legend()
plot.xlabel("Time (hours)")
plot.ylabel("System Reliability $R_{Sys}$")
plot.title("Reliability of TMR with Spare for One Module and Standard TMR over Time")
plot.savefig('question_7_graph.pdf', bbox_inches='tight')