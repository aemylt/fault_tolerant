#!/usr/bin/env python

import math
import matplotlib.pyplot as plot
from mpl_toolkits.mplot3d import Axes3D
from numpy import arange

def calculate_q6_r_sys(r_m, c):
    one_module = r_m * r_m + (1 - r_m) * c * r_m
    return one_module * one_module + (1 - one_module) * c * one_module

q7_lambda = 0.001

def calculate_q7_r_sys(t):
    r_m = math.e ** (-0.001 * t)
    r_m_p = (1 - r_m)
    return r_m ** 3 + r_m_p * (r_m ** 3) + 4 * (r_m_p ** 2) * (r_m ** 2) + 2 * r_m_p * (r_m ** 2)

def calculate_q7_tmr(t):
    r_m = math.e ** (-0.001 * t)
    return 3 * r_m * r_m - 2 * r_m * r_m * r_m

q6_r_sys = []
q6_r_m = []
q6_cov = []

for i in arange(0, 1.01, 0.01):
    q6_r_m.append([i] * 101)
    q6_r_sys.append([])
    q6_cov.append([])
    for j in arange(0, 1.01, 0.01):
        q6_r_sys[-1].append(calculate_q6_r_sys(i, j))
        q6_cov[-1].append(j)

q7_r_sys = []
q7_tmr = []
q7_t = arange(0, 4000, 1)

for i in q7_t:
    q7_r_sys.append(calculate_q7_r_sys(i))
    q7_tmr.append(calculate_q7_tmr(i))

fig = plot.figure()
ax = fig.add_subplot(111, projection='3d')
ax.plot_surface(q6_r_m, q6_cov, q6_r_sys)
ax.set_xlabel('Module Reliability $R_M$')
ax.set_ylabel('Coverage $C$')
ax.set_zlabel('System Reliability $R_Sys$')
plot.title("Reliability of Pair By Spare Scheme over Module Reliability and Coverage")
plot.savefig('question_6_graph.pdf', bbox_inches='tight')

plot.figure()
plot.plot(q7_t, q7_r_sys, label='TMR with Spare for One Module')
plot.plot(q7_t, q7_tmr, label='Standard TMR')
plot.legend()
plot.xlabel("Time (hours)")
plot.ylabel("System Reliability $R_{Sys}$")
plot.title("Reliability of TMR with Spare for One Module and Standard TMR over Time")
plot.savefig('question_7_graph.pdf', bbox_inches='tight')